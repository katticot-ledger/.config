behaviors {

    //////////////////////////////////////////////////////////////////////////
    //
    // Miryoku layers and home row mods (ported from my QMK endgame)
    // - https://sunaku.github.io/home-row-mods.html#porting-to-zmk
    // - https://github.com/urob/zmk-config#timeless-homerow-mods
    //
    //////////////////////////////////////////////////////////////////////////

    //
    // HOMEY_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use
    // for the pinky, ring, and middle fingers (which are assigned to Super,
    // Alt, and Ctrl respectively in the Miryoku system) on home row keys.
    //

    //
    // HOMEY_HOLDING_TIME defines how long you need to hold (milliseconds)
    // home row mod keys in order to send their modifiers to the computer
    // (i.e. "register" them) for mod-click mouse usage (e.g. Ctrl-Click).
    //

    //
    // HOMEY_STREAK_DECAY defines how long you need to wait (milliseconds)
    // after typing before you can use home row mods again.  It prevents
    // unintended activation of home row mods when you're actively typing.
    //

    //
    // HOMEY_REPEAT_DECAY defines how much time you have left (milliseconds)
    // after tapping a key to hold it again in order to make it auto-repeat.
    //

    //
    // SHIFT_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use
    // for index fingers (which Miryoku assigns to Shift) on home row keys.
    //
    // NOTE: The "tap-preferred" flavor of ZMK hold-tap for index finger keys
    // allows faster activation of the Shift modifier (without having to wait
    // for the modified key to be released as the "balanced" flavor requires).
    // Typing streaks and the `hold-trigger-on-release` setting are disabled
    // for the index fingers so as not to hinder their speed and dexterity.
    //

    //
    // SHIFT_HOLDING_TIME defines how long you need to hold (milliseconds)
    // index finger keys in order to send their modifiers to the computer
    // (i.e. "register" them) for mod-click mouse usage (e.g. Shift-Click).
    //
    // CAUTION: You'll need to perform inward rolls from pinky->ring->middle
    // fingers toward the index fingers when activating multiple modifiers
    // because `hold-trigger-on-release` is disabled for the index fingers.
    // Otherwise, you may be surprised that the index fingers' modifier is
    // sent immediately without the rest of your multi-mod chord when you
    // perform outward rolls from your index fingers toward your pinkies.
    //

    //
    // SHIFT_STREAK_DECAY defines how long you need to wait (milliseconds)
    // after typing before you can use home row mods again.  It prevents
    // unintended activation of home row mods when you're actively typing.
    //

    //
    // SHIFT_REPEAT_DECAY defines how much time you have left (milliseconds)
    // after tapping a key to hold it again in order to make it auto-repeat.
    //

    //
    // THUMB_HOLDING_TYPE defines the flavor of ZMK hold-tap behavior to use
    // for the thumbs (which are assigned to 6 layers in the Miryoku system).
    //
    // NOTE: The "balanced" flavor of ZMK hold-tap provides instant modifier
    // activation for the symbol layer (if the tapped symbol key is released
    // while the thumb layer key is still held down) for quicker programming.
    //

    //
    // THUMB_HOLDING_TIME defines how long you need to hold (milliseconds)
    // a thumb key to activate a layer.  Shorter holds are treated as taps.
    //

    //
    // THUMB_REPEAT_DECAY defines how much time you have left (milliseconds)
    // after tapping a key to hold it again in order to make it auto-repeat.
    //

    //
    // SPACE_HOLDING_TIME defines how long you need to hold (milliseconds)
    // the space thumb key to activate.  Shorter holds are treated as taps.
    //

    //
    // SPACE_REPEAT_DECAY defines how much time you have left (milliseconds)
    // after tapping a key to hold it again in order to make it auto-repeat.
    //
    //_TIME(name, default_value) \
    #ifndef name \
    #define name default_value \
    #endif

DEFINE_HOLDING_TIME(HOMEY_HOLDING_TIME, 220)
DEFINE_HOLDING_TIME(SHIFT_HOLDING_TIME, 200)
DEFINE_HOLDING_TIME(THUMB_HOLDING_TIME, 200)
DEFINE_HOLDING_TIME(SPACE_HOLDING_TIME, 170)

// Decay Times to Prevent Unintended Activations (Milliseconds)
DEFINE_HOLDING_TIME(HOMEY_STREAK_DECAY, 140)
DEFINE_HOLDING_TIME(SHIFT_STREAK_DECAY, 80)
DEFINE_HOLDING_TIME(HOMEY_REPEAT_DECAY, 300)
DEFINE_HOLDING_TIME(SHIFT_REPEAT_DECAY, 300)
DEFINE_HOLDING_TIME(THUMB_REPEAT_DECAY, 300)
DEFINE_HOLDING_TIME(SPACE_REPEAT_DECAY, 200)

// ---------------------------
// Home Row Mod-Tap Definitions
// ---------------------------

// General Home Row Mods for Pinky, Ring, Middle Fingers
#define DEFINE_HOME_ROW_MOD(name, hand) \
    name: miryoku_home_row_mods_##hand##_hand { \
        compatible = "zmk,behavior-hold-tap"; \
        label = "HOME_ROW_MODS_" #hand "_HAND"; \
        flavor = HOMEY_HOLDING_TYPE; \
        hold-trigger-key-positions = <OTHER_HAND_KEYS THUMB_KEYS>; \
        hold-trigger-on-release; \
        tapping-term-ms = <HOMEY_HOLDING_TIME>; \
        quick-tap-ms = <HOMEY_REPEAT_DECAY>; \
        require-prior-idle-ms = <HOMEY_STREAK_DECAY>; \
        #binding-cells = <2>; \
        bindings = <&kp>, <&kp>; \
    }

DEFINE_HOME_ROW_MOD(homey_left, left)
DEFINE_HOME_ROW_MOD(homey_right, right)

// Special Home Row Mods for Index Fingers
#define DEFINE_SHIFT_MOD(name, hand) \
    name: miryoku_home_row_mods_##hand##_shift_shift { \
        compatible = "zmk,behavior-hold-tap"; \
        label = "HOME_ROW_MODS_" #hand "_SHIFT_SHIFT"; \
        flavor = SHIFT_HOLDING_TYPE; \
        hold-trigger-key-positions = <OTHER_HAND_KEYS THUMB_KEYS>; \
        tapping-term-ms = <SHIFT_HOLDING_TIME>; \
        quick-tap-ms = <SHIFT_REPEAT_DECAY>; \
        require-prior-idle-ms = <SHIFT_STREAK_DECAY>; \
        #binding-cells = <2>; \
        bindings = <&kp>, <&kp>; \
    }

DEFINE_SHIFT_MOD(shift_left, left)
DEFINE_SHIFT_MOD(shift_right, right)

// -------------
// Thumb Layers
// -------------

// Thumb Layer Activation
#define DEFINE_THUMB_LAYER(name, special) \
    name: miryoku_thumb_layer_##special { \
        compatible = "zmk,behavior-hold-tap"; \
        label = "MIRYOKU_THUMB_LAYER_" #special; \
        flavor = THUMB_HOLDING_TYPE; \
        tapping-term-ms = <THUMB_HOLDING_TIME>; \
        #binding-cells = <2>; \
        bindings = <&mo>, <&kp>; \
    }

DEFINE_THUMB_LAYER(thumb, )
DEFINE_THUMB_LAYER(space, spacebar)

// -----------
// Macros
// -----------

// Window Management Macros (Inspired by Amethyst Hotkeys)
#define DEFINE_MACRO(name, sequence) \
    ZMK_MACRO(name, bindings = <&kp sequence>; )

DEFINE_MACRO(nav_layout_full, LS(LA(LG(Q))))
DEFINE_MACRO(nav_layout_left, LS(LA(LG(W))))
DEFINE_MACRO(nav_layout_center, LS(LA(LG(E))))
DEFINE_MACRO(nav_layout_right, LS(LA(LG(R))))
DEFINE_MACRO(nav_layout_shrink, LS(LA(LG(T))))
DEFINE_MACRO(nav_layout_grow, LS(LA(LG(Y))))
DEFINE_MACRO(nav_focus_ccw, LS(LA(LG(S))))
DEFINE_MACRO(nav_focus_main, LS(LA(LG(D))))
DEFINE_MACRO(nav_focus_cw, LS(LA(LG(F))))
DEFINE_MACRO(nav_swap_ccw, LS(LA(LG(X))))
DEFINE_MACRO(nav_swap_main, LS(LA(LG(C))))
DEFINE_MACRO(nav_swap_cw, LS(LA(LG(V))))
DEFINE_MACRO(nav_space_left, LS(LA(LG(A))))
DEFINE_MACRO(nav_space_right, LS(LA(LG(G))))
DEFINE_MACRO(nav_throw_left, LS(LA(LG(Z))))
DEFINE_MACRO(nav_throw_right, LS(LA(LG(B))))
DEFINE_MACRO(tmux, LCTRL(B));
///////////////////////////////////////////////////////////////////////////////
//
// Miryoku ZMK Configuration Enhancements
// Home Row Mods and Layer Configuration for Improved Keyboard Efficiency
// Inspired by: 
// - Sunaku's Home Row Mods Guide: https://sunaku.github.io/home-row-mods.html#porting-to-zmk
// - Urob's Timeless Homerow Mods: https://github.com/urob/zmk-config#timeless-homerow-mods
//
///////////////////////////////////////////////////////////////////////////////

// --------------------------
// Configuration Definitions
// --------------------------

// Hold-Tap Behavior Types
#ifndef HOMEY_HOLDING_TYPE
#define HOMEY_HOLDING_TYPE "tap-preferred" // Pinky, Ring, Middle: Super, Alt, Ctrl
#endif

#ifndef SHIFT_HOLDING_TYPE
#define SHIFT_HOLDING_TYPE "tap-preferred" // Index: Shift (Faster Activation)
#endif

#ifndef THUMB_HOLDING_TYPE
#define THUMB_HOLDING_TYPE "balanced" // Thumbs: Layer Activation
#endif

// Holding Times for Modifiers and Layers (Milliseconds)
#define DEFINE_HOLDING
